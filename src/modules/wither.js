var request = require('request-promise')
// 11106 serdobsk
var config = require('../config')
var headers = config.get('Yandex_Headers') /// @Georgiy_D , thanks for headers :)))
module.exports = async function (needSearch, string) {
  if (needSearch) {
    let geoid = await request({
      url: 'https://api.weather.yandex.ru/v1/locations?lang=ru_RU',
      headers: headers,
      method: 'GET',
      json: true
    })
    let unknown = await request({
      url: 'https://api.weather.yandex.ru/v1/forecast?ext_kind=weather&lang=ru_RU&geoid=' + searchGeoid(geoid, string),
      headers: headers,
      method: 'GET',
      json: true
    })
    if (unknown) {
      return output(unknown)
    } else {
      return 'Ooops... –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòå'
    }
  } else {
    let my_json = await request({
      url: 'https://api.weather.yandex.ru/v1/forecast?ext_kind=weather&lang=ru_RU&geoid=49',
      headers: headers,
      method: 'GET',
      json: true
    })

    if (my_json) {
      return output(my_json)
    } else {
      return 'Ooops... –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòå'
    }
  }
}

function translate (word) {
  var super_translate = {
    'clear': '–Ø—Å–Ω–æ',
    'mostly-clear': '–ú–∞–ª–æ–æ–±–ª–∞—á–Ω–æ',
    'partly-cloudy': '–ú–∞–ª–æ–æ–±–ª–∞—á–Ω–æ',
    'overcast': '–ü–∞—Å–º—É—Ä–Ω–æ',
    'partly-cloudy-and-light-rain': '–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å',
    'partly-cloudy-and-rain': '–î–æ–∂–¥—å',
    'overcast-and-rain': '–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å',
    'overcast-thunderstorms-with-rain': '–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å, –≥—Ä–æ–∑–∞',
    'cloudy': '–û–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏',
    'cloudy-and-light-rain': '–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å',
    'overcast-and-light-rain': '–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å',
    'cloudy-and-rain': '–î–æ–∂–¥—å',
    'overcast-and-wet-snow': '–î–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º',
    'partly-cloudy-and-light-snow': '–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥',
    'partly-cloudy-and-snow': '–°–Ω–µ–≥',
    'overcast-and-snow': '–°–Ω–µ–≥–æ–ø–∞–¥',
    'cloudy-and-light-snow': '–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥',
    'overcast-and-light-snow': '–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥',
    'cloudy-and-snow': '–°–Ω–µ–≥',
    'full-moon': '–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ',
    'decreasing-moon': '–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞',
    'last-quarter': '–ü–æ—Å–ª–µ–¥–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å',
    'new-moon': '–ù–æ–≤–æ–ª—É–Ω–∏–µ',
    'growing-moon': '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞',
    'first-quarter': '–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å'
  }

  try {
    let smysol = super_translate[word]
    return smysol
  } catch (e) {
    return word
  }
}

function searchGeoid (arr, name) {
  name = name.toLowerCase()
  for (let i = 0; i < arr.length; i++) {
    let string = arr[i].name
    if (string.toLowerCase() == name) {
      return arr[i].geoid
      break
    }
  }
}

function output (json) {
  // console.log(my_json)
  let sunset = json['forecasts'][0]['sunset']
  let sunrise = json['forecasts'][0]['sunrise']
  let parts = json['forecasts'][0]['parts']
  let city = json['geo_object']['locality']['name']

  let now = json['fact']
  let temp = now['temp'].toString() + '¬∞C'
  let feels = now['feels_like'].toString() + '¬∞C'
  let wind_speed = now['wind_speed'].toString() + ' –º/—Å'
  let humidity = now['humidity'].toString() + '%'
  let pressure_mm = now['pressure_mm'].toString() + ' –º–º —Ä—Ç. —Å—Ç.'
  let morning = parts['morning']['temp_avg'].toString() + '¬∞C'
  let day = parts['day']['temp_avg'].toString() + '¬∞C'
  let evening = parts['evening']['temp_avg'].toString() + '¬∞C'
  let description = translate(now['condition'].toString())
  let formatting_parts = '\n–£—Ç—Ä–æ: ' + morning + '\n–î–µ–Ω—å: ' + day + '\n–í–µ—á–µ—Ä: ' + evening
  let formatting_set = '\n–í–æ—Å—Ö–æ–¥: ' + sunrise + '\n–ó–∞–∫–∞—Ç: ' + sunset
  let out = city + '\n' + description + '\n–°–µ–π—á–∞—Å: ' + temp + '\n–ü–æ –æ—â—É—â–µ–Ω–∏—è–º: ' + feels + '\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ' + wind_speed + '\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: ' + humidity + '\n–î–∞–≤–ª–µ–Ω–∏–µ: ' + pressure_mm + '\n' + formatting_parts + '\n' + formatting_set
  return out
}
